{"version":3,"file":"static/js/166.495c8d27.chunk.js","mappings":"oOAAaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACnBC,EAAY,SAAAH,GAAK,OAAIA,EAAMI,OAAOC,KAAjB,EACjBC,EAAe,SAAAN,GAAK,OAAIA,EAAMC,SAASM,SAAnB,E,kBCApBC,EAAUC,EAAAA,GAAAA,IAAH,8CAIPC,EAAOD,EAAAA,GAAAA,GAAH,kGAMJE,EAAUF,EAAAA,GAAAA,OAAH,+LAaPG,EAAOH,EAAAA,GAAAA,EAAH,8E,SCpBJI,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACbd,GAAWe,EAAAA,EAAAA,IAAYjB,GACrBK,GAASY,EAAAA,EAAAA,IAAYb,GAM3B,MALe,KAAXC,IACFH,EAAWA,EAASG,QAAO,SAAAa,GACzB,OAAOA,EAAQC,KAAKC,cAAcC,SAAShB,EAAOe,cACnD,MAGD,UAACX,EAAD,YACE,wBACGP,EAASoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIJ,EAAP,EAAOA,KAAMK,EAAb,EAAaA,OAAb,OACZ,UAACb,EAAD,WACGQ,EADH,IACUK,GACR,SAACZ,EAAD,CAASa,KAAK,SAASC,QAAS,kBAAMX,GAASY,EAAAA,EAAAA,IAAcJ,GAA7B,EAAhC,sBAFSA,EADC,MASK,IAApBrB,EAAS0B,SAAgB,SAACf,EAAD,sCAG/B,E,SC3BYgB,EAAYnB,EAAAA,GAAAA,GAAH,+CAIToB,EAAOpB,EAAAA,GAAAA,KAAH,qEAKJqB,EAAQrB,EAAAA,GAAAA,MAAH,iEAKLsB,EAAQtB,EAAAA,GAAAA,MAAH,+JASLuB,EAAMvB,EAAAA,GAAAA,OAAH,iRCnBHwB,EAAc,WACzB,IAAMC,GAAUnB,EAAAA,EAAAA,MAahB,OACE,4BACE,SAACa,EAAD,yBACA,UAACC,EAAD,CAAMM,OAAO,GAAGC,SAdC,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,OACXC,EAAa,CACjBnB,GAAIoB,EAAAA,GACJxB,KAAMqB,EAAKI,SAASzB,KAAKb,OAE3B6B,GAAQU,EAAAA,EAAAA,IAAWH,IACnBF,EAAKM,OACN,EAKG,WACE,SAACf,EAAD,CAAOgB,QAAQ,GAAf,mBACA,SAACf,EAAD,CACEP,KAAK,OACLN,KAAK,OACL6B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,SAACnB,EAAD,CAAOgB,QAAQ,GAAf,qBACA,SAACf,EAAD,CACEP,KAAK,MACLN,KAAK,SACL6B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEV,SAACjB,EAAD,CAAKR,KAAK,SAAV,+BAIP,ECrCc,SAAS0B,IACtB,IAAMpC,GAAWC,EAAAA,EAAAA,MACXR,GAAYS,EAAAA,EAAAA,IAAYV,GAK9B,OAHA6C,EAAAA,EAAAA,YAAU,WACRrC,GAASsC,EAAAA,EAAAA,MACV,GAAE,CAACtC,KAEF,iCACE,2CACA,SAACmB,EAAD,KACA,yBAAM1B,GAAa,4BACnB,SAACM,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","components/ContactList/contactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/contactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter.value;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","import styled from 'styled-components';\n\nexport const ListBox = styled.div`\n  padding-top: 30px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10px;\n`;\n\nexport const BtnItem = styled.button`\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 6px;\n  border: none;\n  width: 100px;\n\n  cursor: pointer;\n  &:hover {\n    background-color: teal;\n  }\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  text-decoration: underline;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport { ListBox, Item, BtnItem, Text } from './contactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  let contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  if (filter !== '')\n    contacts = contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n\n  return (\n    <ListBox>\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <Item key={id}>\n            {name}:{number}\n            <BtnItem type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n              Delete\n            </BtnItem>\n          </Item>\n        ))}\n      </ul>\n      {contacts.length === 0 && <Text>no contacts available</Text>}\n    </ListBox>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TitleForm = styled.h2`\n  text-align: center;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  margin-top: 5px;\n  margin-bottom: 20px;\n  height: 36px;\n  border-radius: 6px;\n  border: none;\n  outline: rgba(0, 0, 0, 0.2); ;\n`;\n\nexport const Btn = styled.button`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 6px;\n  border: none;\n  width: 120px;\n\n  cursor: pointer;\n  &:hover {\n    background-color: teal;\n  }\n`;\n","import { nanoid } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nimport { TitleForm, Form, Label, Input, Btn } from './contactForm.styled';\n\nexport const ContactForm = () => {\n  const dispach = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    const newContact = {\n      id: nanoid,\n      name: form.elements.name.value,\n    };\n    dispach(addContact(newContact));\n    form.reset();\n  };\n\n  return (\n    <div>\n      <TitleForm>Phonebook</TitleForm>\n      <Form action=\"\" onSubmit={handleSubmit}>\n        <Label htmlFor=\"\">Name</Label>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <Label htmlFor=\"\">Number</Label>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <Btn type=\"submit\">Add contacts</Btn>\n      </Form>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <title>Your tasks</title>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getFilter","filter","value","getIsLoading","isLoading","ListBox","styled","Item","BtnItem","Text","ContactList","dispatch","useDispatch","useSelector","contact","name","toLowerCase","includes","map","id","number","type","onClick","deleteContact","length","TitleForm","Form","Label","Input","Btn","ContactForm","dispach","action","onSubmit","evt","preventDefault","form","target","newContact","nanoid","elements","addContact","reset","htmlFor","pattern","title","required","Contacts","useEffect","fetchContacts"],"sourceRoot":""}